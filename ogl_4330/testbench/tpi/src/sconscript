# -----------------------------------------------------------------------------
#  This confidential and proprietary software may be used only as authorized
#  by a licensing agreement from ARM Limited.
#          (C) COPYRIGHT 2011-2012 ARM Limited, ALL RIGHTS RESERVED
#  The entire notice above must be reproduced on all authorized copies and
#  copies may only be made to the extent permitted by a licensing agreement
#  from ARM Limited.
# -----------------------------------------------------------------------------

import os

Import( "env", "rBuildArch", "rBuildOS", "rBuildWindowSystem" )

tpi_common_objs = []
tpi_egl_common_objs = []

Export( "tpi_common_objs", "tpi_egl_common_objs" )

# Call the common sconscript
SConscript( 'common/sconscript' )

# Call the OS specific sconscript
os_objs = SConscript( rBuildOS + '/sconscript' )

if isinstance( os_objs, tuple ) and len( os_objs ) > 1:
	# First element is always tpi objects
	tpi_os_objects = os_objs[0]
	# Second element is always tpi egl objects
	tpi_egl_os_objects = os_objs[1]
else:
	tpi_os_objects = os_objs
	tpi_egl_os_objects = None


# Now declare the tpi static library
sTPILib = env.StaticLibrary(
	os.path.join( "$STATIC_LIB_PATH" , "tpi" ),
	[
		tpi_common_objs,
		tpi_os_objects
	],
	CPPPATH=[ '$CPPPATH', '#tpi' ]
)

env.LibTarget( "tpi", sTPILib )


if rBuildWindowSystem != '' and rBuildWindowSystem != '0' and tpi_egl_common_objs and tpi_egl_os_objects :
	# Build tpi_egl library as well.
	if rBuildWindowSystem == 'x11':
		env.AppendUnique(
			LIBS = ['X11','X11-xcb','drm','xcb','xcb-render','xcb-dri2','Xext','Xau','Xfixes','Xdmcp']
			)

	sTPI_EGL_Lib = env.StaticLibrary(
		os.path.join( "$STATIC_LIB_PATH" , "tpi_egl" ),
		[
			tpi_egl_common_objs,
			tpi_egl_os_objects
		],
		CPPPATH=[ '$CPPPATH', '#tpi' ]
	)

	env.LibTarget( "tpi", sTPI_EGL_Lib )
