#!/usr/bin/env python

import os
import getopt, sys
import re

filename = sys.argv[1]
copyright = sys.argv[2]

if __name__ == "__main__":    
    f = open(filename, "r")
    if f == None:
        print "File not found: %s" % filename

    pattern = r"\s*\{\s*(\d+),\s*(\d+),\s*_piece_(\w+)\s*\}" #r"\s*\{\s*(\d+),\s*(\d+),\s*_piece_(\w)\s*\}"
    pattern = re.compile(pattern)

    f_copyright = open(copyright, "r")
    if f_copyright == None:
        print "File not found: dummy_copyright.h"

    for line in f_copyright.readlines():
        print "%s" % line,
	f_copyright.close()
	
    print "/* This file is generated by make_piece_names.py. */"
    print "static const struct { unsigned id; const char* name; } pieceIdAndStringArray[] = {"
    for line in f:
        matcher = pattern.search(line)
        if matcher != None:
            piece_id = int(matcher.group(1))
            piece_name = matcher.group(3)
            print "{ %d, \"%s\" }," % (piece_id, piece_name)
            #print line

    # Last id == 0 to indicate end of array
    print "{0 , \"\"} };"

